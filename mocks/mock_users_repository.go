// Code generated by MockGen. DO NOT EDIT.
// Source: users_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repo "github.com/ishan-backend/postman-backend/models/repo"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockUsersRepoInterface is a mock of UsersRepoInterface interface.
type MockUsersRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUsersRepoInterfaceMockRecorder
}

// MockUsersRepoInterfaceMockRecorder is the mock recorder for MockUsersRepoInterface.
type MockUsersRepoInterfaceMockRecorder struct {
	mock *MockUsersRepoInterface
}

// NewMockUsersRepoInterface creates a new mock instance.
func NewMockUsersRepoInterface(ctrl *gomock.Controller) *MockUsersRepoInterface {
	mock := &MockUsersRepoInterface{ctrl: ctrl}
	mock.recorder = &MockUsersRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersRepoInterface) EXPECT() *MockUsersRepoInterfaceMockRecorder {
	return m.recorder
}

// BulkInsert mocks base method.
func (m *MockUsersRepoInterface) BulkInsert(ctx context.Context, users []repo.User) ([]primitive.ObjectID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkInsert", ctx, users)
	ret0, _ := ret[0].([]primitive.ObjectID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkInsert indicates an expected call of BulkInsert.
func (mr *MockUsersRepoInterfaceMockRecorder) BulkInsert(ctx, users interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkInsert", reflect.TypeOf((*MockUsersRepoInterface)(nil).BulkInsert), ctx, users)
}
